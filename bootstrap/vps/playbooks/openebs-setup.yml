---
- name: Install OpenEBS
  hosts: k8s_master
  become: false
  vars:
    kube_config_dir: "{{ ansible_env.HOME }}/.kube"

  tasks:
    - name: Add OpenEBS Helm repo
      command: helm repo add openebs https://openebs.github.io/openebs
      register: helm_repo_add
      changed_when: helm_repo_add.rc == 0
      failed_when:
        - helm_repo_add.rc != 0
        - '"already exists" not in helm_repo_add.stderr'

    - name: Update Helm repos
      command: helm repo update
      changed_when: true

    - name: Install OpenEBS
      command: >
        helm install openebs openebs/openebs
        --namespace openebs
        --create-namespace
        --set openebsNDM.enabled=false
        --set webhook.enabled=false
        --set engines.replicated.mayastor.enabled=false
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: openebs_install
      changed_when: openebs_install.rc == 0

    # - name: Wait for OpenEBS pods
    #   command: >
    #     kubectl wait --for=condition=Ready pods
    #     --namespace openebs
    #     --selector=openebs.io/component-name
    #     --timeout=300s
    #   environment:
    #     KUBECONFIG: "{{ kube_config_dir }}/config"
    #   register: wait_result
    #   retries: 5
    #   delay: 10
    #   until: wait_result.rc == 0

    - name: Make OpenEBS local-hostpath the default StorageClass
      command: >
        kubectl patch storageclass openebs-hostpath -p
        '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: patch_result
      changed_when: patch_result.rc == 0

    - name: Verify StorageClasses
      command: kubectl get storageclass
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: sc_result
      changed_when: false

    - name: Display StorageClass status
      debug:
        var: sc_result.stdout_lines
