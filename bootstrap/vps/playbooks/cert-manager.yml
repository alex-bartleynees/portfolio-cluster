- name: Install cert-manager
  hosts: k8s_master
  become: false
  vars:
    kube_config_dir: "/home/{{ ansible_user }}/.kube"
    cert_manager_version: "v1.13.3"
    cert_manager_namespace: "cert-manager"

  tasks:
    - name: Add Jetstack Helm repository
      command: helm repo add jetstack https://charts.jetstack.io
      register: repo_add
      changed_when: repo_add.rc == 0
      failed_when:
        - repo_add.rc != 0
        - '"already exists" not in repo_add.stderr'
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"

    - name: Add Emberstack repository for Reflector
      command: helm repo add emberstack https://emberstack.github.io/helm-charts
      register: emberstack_repo_add
      changed_when: emberstack_repo_add.rc == 0
      failed_when:
        - emberstack_repo_add.rc != 0
        - '"already exists" not in emberstack_repo_add.stderr'
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"

    - name: Update Helm repositories
      command: helm repo update
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"

    - name: Install Reflector
      command: >
        helm upgrade --install reflector emberstack/reflector
        --namespace cert-manager
        --create-namespace
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: reflector_install
      changed_when: reflector_install.rc == 0

    - name: Install cert-manager
      command: >
        helm upgrade --install cert-manager jetstack/cert-manager
        --namespace {{ cert_manager_namespace }}
        --version {{ cert_manager_version }}
        --create-namespace
        --set installCRDs=true
        --wait
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: cert_manager_install
      changed_when: cert_manager_install.rc == 0

    - name: Wait for cert-manager pods to be ready
      command: kubectl -n {{ cert_manager_namespace }} wait --for=condition=Ready pods --all --timeout=300s
      environment:
        KUBECONFIG: "{{ kube_config_dir }}/config"
      register: wait_result
      retries: 10
      delay: 10
      until: wait_result.rc == 0
